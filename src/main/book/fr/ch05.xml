<?xml version="1.0" encoding="UTF-8"?>
<chapter lang="fr" version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
	<title>Jenkins Configuration</title>
	
	<section>
	
		<title>Installing <application>Jenkins</application></title>
		
		<para>Download <emphasis>jenkins.war</emphasis> from 
		<link xlink:href="http://www.jenkins-ci.org">http://www.jenkins-ci.org</link> to a folder 
		of your preference. Now go to the command line and execute 
		<programlisting><![CDATA[java -jar jenkins.war]]></programlisting> 
		(if you need change the port, use <emphasis>--httpPort=9999</emphasis>).</para>
		
		<para><application>Jenkins</application> creates a default workspace for you in 
		<emphasis>~/.jenkins</emphasis> 
		or uses the folder specified in <emphasis>JENKINS_HOME</emphasis> environment variable.</para>
	
		<para>
			<mediaobject id="jenkins_001_02">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_001.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
	
		<para>Go to <link xlink:href="http://localhost:8080">http://localhost:8080</link> 
		to check if your installation is working. We will call the page loaded 
		when you open <link xlink:href="http://localhost:8080">http://localhost:8080</link> 
		main screen throughout this guide.</para>
	
	</section>
	
	<section>
		
		<title>Installing and configuring <application>Jenkins TestLink Plug-in</application></title>
		
		<para>The plug-ins in <application>Jenkins</application> are distributed from a central update 
		site. Select the option <emphasis>Manage Jenkins</emphasis> in the left menu and look 
		for the <emphasis>Manage Plugins</emphasis> option. Clicking on 
		<emphasis>Available</emphasis> will bring you 
		the list of plug-ins ready to be installed in your 
		<application>Jenkins</application>.</para>
		
		<para>Just check the checkbox besides the plug-in name on the list 
		and click on <emphasis>Install</emphasis> to install the plug-in. 
		<application>Jenkins</application> will download and install the 
		plug-in automatically for you, however you will have to 
		restart for the plug-in to be enabled.</para>
		
		<para>
			<mediaobject id="jenkins_002">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_002.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		
		<para>
			<mediaobject id="jenkins_003">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_003.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		
		<para>After you have already restarted your <application>Jenkins</application>, 
		go to <emphasis>Manage Jenkins</emphasis> again, <emphasis>Configure System</emphasis> 
		option and look for the <application>TestLink</application> 
		section. Fill the <application>TestLink</application> configuration form 
		with a name for your <application>TestLink</application> installation, 
		the <acronym>URL</acronym> of the <acronym>XML-RPC API</acronym> and your 
		<emphasis>devKey</emphasis>.</para>
		
		<para>
			<mediaobject id="jenkins_004">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_004.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		
		<para>By default the <application>TestLink</application> 
		<acronym>XML-RPC API</acronym> can be found at 
		<emphasis>http://&lt;host>:&lt;port>/lib/api/xmlrpc.php</emphasis>. 
		The <emphasis>devKey</emphasis> can	be obtained by entering 
		<application>TestLink</application>, clicking on 
		<emphasis>My Settings</emphasis> (top menu) 
		and generating a new <emphasis>devKey</emphasis>, if there is none yet. 
		If you cannot see the <acronym>API</acronym> interface section in 
		<emphasis>My Settings</emphasis> page, then it is 
		very likely that you didn't enable it yet. 
		Go back to <xref linkend="chapter.4">chapter 4</xref> to review your work.</para>
		
	</section>
	
	<section>
	
		<title>Creating a job in Jenkins</title>
		
		<para>In order to create a new job all that you need to do is just click 
		on <emphasis>New Job</emphasis> and give it a name. Choose the option to create a free-style 
		project.</para>
		
		<para>
			<mediaobject id="jenkins_005">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_005.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		
		<para>For the sake of simplicity, we will point the job workspace to 
		our Java project folder. In a real-world project it is more likely 
		that you will have your test project stored in some kind of 
		<acronym>SCM</acronym>, like <application>SVN</application> or 
		<application>git</application>. To change the default workspace location, 
		look for <emphasis>Advanced Project Options</emphasis> and expand its 
		options by clicking on <emphasis>Advanced...</emphasis>. Then mark 
		<emphasis>Use custom workspace</emphasis> and fill the input text 
		with the location of the test project. If you didn't download the 
		sample test project used in this guide, you can find it in 
		<link xlink:href="https://github.com/kinow/jenkins-testlink-plugin-the-definitive-guide/blob/master/sample-test-project.tar.gz?raw=true">
		https://github.com/kinow/jenkins-testlink-plugin-the-definitive-guide/blob/master/sample-test-project.tar.gz?raw=true</link>.</para>
	
		<para>
			<mediaobject id="jenkins_006">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_006.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
	
		<para>Click on <emphasis>Add build step</emphasis> button to expand 
		its options and then click on <emphasis>Invoke TestLink</emphasis>. 
		It will show a new form with options to integrate your 
		<application>Jenkins</application> job with <application>TestLink</application>. 
		Fill this form with the following information that we created in 
		<xref linkend="chapter.4">chapter 4</xref>.</para>
		
		<para>Configure your job as follows:</para>
		
		<para>
			<itemizedlist>
				<listitem>
					<para><application>TestLink</application> version: select the version 
			that you created in the global configuration.</para>
				</listitem>
				<listitem>
					<para>Test Project name: My first project</para>
				</listitem>
				<listitem>
					<para>Test Plan name: My first plan</para>
				</listitem>
				<listitem>
					<para>Build name: My first build (or any other name that you want)</para>
				</listitem>
				<listitem>
					<para>Custom fields: Java class</para>
				</listitem>
				<listitem>
					<para>Single test command: leave it blank</para>
				</listitem>
				<listitem>
					<para>Iterative test command: mvn -e -X test -Dtest=$TESTLINK_TESTCASE_JAVA_CLASS</para>
				</listitem>
				<listitem>
					<para>TestLink automated tests key custom field: Java class</para>
				</listitem>
				<listitem>
					<para>TestNG XML report files pattern: target/**/testng-results.xml</para>
				</listitem>
			</itemizedlist>
		</para>
		
		<para>
			<mediaobject id="jenkins_007_01">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_007.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		
		<para>Click on <emphasis>Save</emphasis> to persist your job to your disk (it is saved as XML).</para>
	
	</section>
	
	<section>
	
		<title>Explaining the Job configuration parameters</title>
		
		<para>
			<mediaobject id="jenkins_007_02">
				<imageobject role="html">
					<imagedata align="center" fileref="media/jenkins_007.png" width="800px" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		
		<section>
		
			<title>TestLink version</title>
			
			<para>This is the name of your <application>TestLink</application> 
			installation in Jenkins global configuration.</para>
			
		</section>
		
		<section>
		
			<title>Test Project name</title>
			
			<para>This is the name of your <emphasis>Test Project</emphasis> 
			in <application>TestLink</application>.</para>
			
		</section>
		
		<section>
		
			<title>Test Plan name</title>
			
			<para>This is the name of your <emphasis>Test Plan</emphasis> 
			in <application>TestLink</application>.</para>
			
		</section>
		
		<section>
		
			<title>Build name</title>
			
			<para>This is the name of your <emphasis>Build</emphasis> 
			in <application>TestLink</application>. You can use environment 
			variables in this field following the pattern ${VARIABLE_NAME}.</para>
			
		</section>
		
		<section>
		
			<title>Custom fields</title>
			
			<para>This is a comma separated list of <emphasis>Custom Fields</emphasis> 
			in <application>TestLink</application>.</para>
			
		</section>
		
		<section>
		
			<title>Single test command</title>
			
			<para>This command is executed once on the slave node of Jenkins (master 
			if your Jenkins is not distributed). This field can be used 
			to execute test suites, for example. You can use 
			environment variables in this field.</para>
			
		</section>
		
		<section>
		
			<title>Iterative test command</title>
			
			<para>This command is executed for each automated test case 
			within your Test Plan in <application>TestLink</application>. 
			You can use environment variables in this field.</para>
			
		</section>
		
		<section>
		
			<title>TestLink automated tests key custom field</title>
			
			<para>This is the name of the custom field that the plug-in will 
			use to match a <emphasis>Test Result</emphasis> with an automated test case from 
			<application>TestLink</application>. The way that this field is 
			used when the plug-in is scanning the test results depends on the 
			<emphasis>Test Strategy</emphasis>.</para>
			
		</section>
		
		<section>
		
			<title><application>JUnit</application>, <application>TestNG</application> and 
			<acronym>TAP</acronym> report files patterns.</title>
			
			<para>The plug-in uses these patterns to find test results of your 
			tests execution (single test command or iterative). You can use multiple 
			patterns at once, but it may lead to inconsistencies in 
			your test results in <application>TestLink</application>.</para>
			
		</section>
		
		<section>
		
			<title>Transactional execution?</title>
			
			<para>If this option is marked and any test fails, all remaining 
			tests will be marked as Blocked in TestLink.</para>
			
		</section>
		
	</section>
	
</chapter>